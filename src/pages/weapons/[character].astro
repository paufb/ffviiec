---
import type { Character } from '../../data/types';
import { characters } from '../../data/instances/characters';
import { weapons } from '../../data/instances/weapons';
import WeaponsLayout from '../../layouts/WeaponsLayout.astro';
import WeaponImage from '../../components/WeaponImage.astro';
import ReinforcementAbilityIcon from '../../components/ReinforcementAbilityIcon.astro';
import AbilityIcons from '../../components/AbilityIcons.astro';
import ATBBar from '../../components/ATBBar.astro';

export async function getStaticPaths() {
  return Object.values(characters).map((character) => ({
    params: { character: character.path },
    props: { selectedCharacter: character }
  }));
}

interface Props {
  selectedCharacter: Character;
  isIndexPage?: boolean;
}

const { selectedCharacter, isIndexPage = false } = Astro.props;
const filteredWeapons = Object.values(weapons).filter((weapon) => weapon.character.path === selectedCharacter.path);
---

<WeaponsLayout selectedCharacter={selectedCharacter} isIndexPage={isIndexPage}>
  <div class="grid grid-cols-[repeat(auto-fit,minmax(min(300px,100%),1fr))] gap-4">
    {filteredWeapons.map((weapon) => (
      <div class="flex gap-2 min-w-0">
        <a href={`/weapons/${weapon.character.path}/${weapon.id || weapon.name}`}>
          <WeaponImage
            weapon={weapon}
            size="normal"
            width={96}
            height={96}
            hoverable
            clickable
          />
        </a>
        <div class="flex flex-col flex-1 py-1.5 overflow-hidden">
          <span class="whitespace-nowrap">{weapon.name}</span>
          <div class="flex flex-1 gap-2 justify-between">
            <div class="flex flex-col gap-0.5 justify-end overflow-x-scroll">
              {weapon.reinforcementAbilities.map((reinforcementAbility) => (
                <div class="flex gap-2 items-center">
                  <ReinforcementAbilityIcon reinforcementAbility={reinforcementAbility} width={24} height={24} />
                  <span class="text-sm whitespace-nowrap">{reinforcementAbility.name}</span>
                </div>
              ))}
            </div>
            <div class="flex flex-col gap-1">
              <AbilityIcons commandAbility={weapon.commandAbility} element={weapon.element} />
              <ATBBar cost={weapon.commandAbility.atbCost} />
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
</WeaponsLayout>
