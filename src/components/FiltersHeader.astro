---
import { Image } from 'astro:assets';
import { characters } from '../data/instances/characters';
import { elements } from '../data/instances/elements';
import { sigils } from '../data/instances/sigils';

interface Props {
  characterCheckboxClass?: string;
  elementCheckboxClass?: string;
  sigilCheckboxClass?: string;
}

const { characterCheckboxClass, elementCheckboxClass, sigilCheckboxClass } = Astro.props;

const characterImages = import.meta.glob<{ default: ImageMetadata }>('../assets/character_btn/*.png');
const elementImages = import.meta.glob<{ default: ImageMetadata }>('../assets/_ui/icon/attribute/*.png');
const sigilImages = import.meta.glob<{ default: ImageMetadata }>('../assets/_ui/icon/sign/*.png');
---

<div
  class="flex flex-col gap-2 p-2 overflow-x-scroll sticky self-center top-18 bg-[#23232380] backdrop-blur-md rounded-md z-1"
  style={{ maxWidth: 'calc(100vw - 76px)' }}
>
  {characterCheckboxClass && (
    <div class="flex flex-nowrap justify-center gap-1 min-w-max">
      {Object.values(characters).map((character) => (
        <label>
          <input
            type="checkbox"
            value={character.name}
            hidden
            class={characterCheckboxClass}
          />
          <Image
            src={characterImages[`../assets/character_btn/${character.id}.png`]()}
            width={50}
            height={50}
            alt={character.name}
          />
        </label>
      ))}
    </div>
  )}
  {(elementCheckboxClass || sigilCheckboxClass) && (
    <div class="flex justify-center gap-2 min-w-max">
      {elementCheckboxClass && (
        <div class="flex flex-nowrap justify-center gap-1">
          {Object.values(elements).map((element) => (
            <label>
              <input
                type="checkbox"
                value={element.name}
                hidden
                class={elementCheckboxClass}
              />
              <Image
                src={elementImages[`../assets/_ui/icon/attribute/${element.icon}.png`]()}
                width={50}
                height={50}
                alt={element.name}
              />
            </label>
          ))}
        </div>
      )}
      {sigilCheckboxClass && (
        <div class="flex flex-nowrap justify-center gap-1">
          {Object.values(sigils).map((sigil) => (
            <label>
              <input
                type="checkbox"
                value={sigil.name}
                hidden
                class={sigilCheckboxClass}
              />
              <Image
                src={sigilImages[`../assets/_ui/icon/sign/${sigil.icon}.png`]()}
                width={50}
                height={50}
                alt={sigil.name}
              />
            </label>
          ))}
        </div>
      )}
    </div>
  )}
</div>

<style>
  label {
    --border-color: #394d60;
    --background-color: #1a1a1a;
    width: 2.5rem;
    height: 2.5rem;
    cursor: pointer;
    border: .375rem double var(--border-color);
    border-radius: .125rem;
    background-color: var(--background-color);
    transition: scale .1s;

    &:hover {
      --border-color: #5574aa;
    }

    &:active {
      scale: .95;
    }
  }

  :is(label.selected, label.selected:hover) {
    --border-color: #2c80d7;
    --background-color: #032950;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
</style>
