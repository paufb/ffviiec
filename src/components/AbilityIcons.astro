---
import type { ImageMetadata } from 'astro';
import type { Element } from '../data/types';
import type { CommandAbility } from '../data/classes/CommandAbility';
import { Image } from 'astro:assets';
import unfixImage from '../assets/_ui/icon/common/unfix.png';
import minusImage from '../assets/_ui/icon/common/minus.png';

interface Props {
  commandAbility: CommandAbility;
  element: Element | null;
}

const elementsIcons: { [K in Element]: string } = {
    'Non-elemental': 'non',
    'Fire': 'fire',
    'Ice': 'ice',
    'Lightning': 'thunder',
    'Earth': 'earth',
    'Water': 'water',
    'Wind': 'wind'
  };

const { commandAbility, element } = Astro.props;
const activeSkillImages = import.meta.glob<{ default: ImageMetadata }>('../assets/activeskill/*.png');
const attributeImages = import.meta.glob<{ default: ImageMetadata }>('../assets/_ui/icon/attribute/*.png');
const signImages = import.meta.glob<{ default: ImageMetadata }>('../assets/_ui/icon/sign/*.png');
---

<div class="a">
  <div class={`b ${commandAbility.id ? '' : 'p-1'}`}>
    <Image
      class="animate-imageload"
      src={commandAbility.id ? activeSkillImages[`../assets/activeskill/${commandAbility.id}.png`]() : unfixImage}
      alt={commandAbility.name}
    />
  </div>
  <div class={`c ${element ? '' : 'p-1'}`}>
    <Image
      class="animate-imageload"
      src={element ? attributeImages[`../assets/_ui/icon/attribute/${elementsIcons[element]}.png`]() : minusImage }
      alt={element ?? ''}
    />
  </div>
  <div class={`c ${commandAbility.sigil ? '' : 'p-1'}`}>
    <Image
      class="animate-imageload"
      src={commandAbility.sigil ? signImages[`../assets/_ui/icon/sign/${commandAbility.sigil.icon}.png`]() : minusImage}
      alt={commandAbility.sigil?.name ?? ''}
    />
  </div>
</div>

<style>
  .a {
    display: flex;
    gap: 2px;
  }
  .b {
    width: 40px;
    height: 40px;
    background: #052854;
    border: 2px solid #3f75ad;
  }
  .c {
    width: 20px;
    height: 20px;
    background: #052854;
    border: 2px solid #3f75ad;
  }
</style>
